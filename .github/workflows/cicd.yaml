name: Deploy Next.js Application

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> .env
        echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> .env
        echo "NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}" >> .env
        echo "NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}" >> .env
        echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL }}" >> .env
        echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL }}" >> .env
        echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
    - name: Build Docker image
      run: |
        docker build -t slstartup:latest .

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: |
        docker tag slstartup:latest "${{ secrets.DOCKER_USERNAME }}/slstartup:latest"
        docker push "${{ secrets.DOCKER_USERNAME }}/slstartup:latest"

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - name: Pull Docker image
      run: |
        docker pull "${{ secrets.DOCKER_USERNAME }}/slstartup:latest"

    - name: Remove old container if exists
      run: |
        docker rm -f slstartup || true

    - name: Run Docker container
      run: |
        docker run -d -p 3000:3000 --name slstartup "${{ secrets.DOCKER_USERNAME }}/slstartup:latest"
